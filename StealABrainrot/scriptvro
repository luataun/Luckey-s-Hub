local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Luckey's Hub",
	Icon = 0,
	LoadingTitle = "Loading | Steal a Brainrot Exploits",
	LoadingSubtitle = "https://discord.gg/5E2hW99tP9",
	Theme = "Default",
	ToggleUIKeybind = "K",
	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false,
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil,
		FileName = "Luckey's Hub"
	},
	Discord = {
		Enabled = true,
		Invite = "5E2hW99tP9",
		RememberJoins = true
	},
	KeySystem = true,
	KeySettings = {
		Title = "Luckey's Hub",
		Subtitle = "Key System",
		Note = "Join the Luckey's Hub discord server for the key!",
		FileName = "Key",
		SaveKey = false,
		GrabKeyFromSite = false,
		Key = {"LuataunBro"}
	}
})

local Tab = Window:CreateTab("Steal a Brainrot", 1)
Tab:CreateButton({
	Name = "Stealing | Fly To Your Base",
	Callback = function()

		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local TweenService = game:GetService("TweenService")
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local Workspace = game:GetService("Workspace")

		local player = Players.LocalPlayer

		local InterfaceController = require(ReplicatedStorage.Controllers.InterfaceController)
		local CameraController = require(ReplicatedStorage.Controllers.CameraController)
		local GameController = require(ReplicatedStorage.Controllers.GameController)
		local PlotController = require(ReplicatedStorage.Controllers.PlotController)
		local NotificationController = require(ReplicatedStorage.Controllers.NotificationController)
		local AnimatedButton = require(ReplicatedStorage.Classes.AnimatedButton)
		NotificationController.Error(nil, "Please bear in mind that this will break your Shop, Rebirth, and Index until we find a fix for this!")
		-- GUI parent and existing Shop button for cloning
		local mainGui = player:WaitForChild("PlayerGui"):WaitForChild("Main")
		local leftCenter = mainGui:WaitForChild("LeftCenter")
		local buttonsFolder = leftCenter:WaitForChild("Buttons")
		local shopButton = buttonsFolder:WaitForChild("Shop")

		-- Create Steal Exploit button by cloning Shop button
		local StealExploit = shopButton:Clone()
		StealExploit.Name = "StealExploit"
		StealExploit.Parent = buttonsFolder

		-- Customize appearance
		StealExploit.ImageColor3 = Color3.new(1, 0, 0.015)  -- bright red tint

		-- Change the icon image and size
		local icon = StealExploit:FindFirstChild("Icon")
		if icon and icon:IsA("ImageLabel") then
			icon.Image = "rbxassetid://86603609994344"
			icon.Size = UDim2.new(2.8, 0, 3.5, 0) -- your custom size
			icon.AnchorPoint = Vector2.new(0.5, 0.5)
			icon.Position = UDim2.new(0.5, 0, 0.42, 0)
		end

		-- Change the text label
		local txt = StealExploit:FindFirstChild("Txt")
		if txt and txt:IsA("TextLabel") then
			txt.Text = "Steal Exploit"
		end

		-- Variables for fly logic
		local moveSpeed = 425
		local flyHeight = 15

		local char, hrp, humanoid
		local conn, bp
		local enabled = false

		-- Tween animations for HUD open/close on leftCenter frame
		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quint)
		local tweenHide = TweenService:Create(leftCenter, tweenInfo, {
			Position = UDim2.fromScale(leftCenter.Position.X.Scale - 1, leftCenter.Position.Y.Scale)
		})
		local tweenShow = TweenService:Create(leftCenter, tweenInfo, {
			Position = leftCenter.Position
		})

		-- Get or register Hud interface safely
		local hudInterface = InterfaceController:Get("Hud")
		if not hudInterface then
			hudInterface = InterfaceController:Register("Hud", leftCenter, "Custom")
		end
		assert(hudInterface, "Failed to get or create Hud interface")

		-- Connect Hud open/close events for tween and camera
		hudInterface.OnOpen:Connect(function()
			CameraController:Blur(0, 0.5)
			CameraController:Fov(CameraController:GetDefaultFov(), 0.5)
			tweenShow:Play()
		end)
		hudInterface.OnClose:Connect(function()
			tweenHide:Play()
		end)
		hudInterface:Close()

		-- Open HUD on game loaded
		GameController:OnGameLoaded(function()
			hudInterface:Toggle(true)
		end)

		-- Animate all buttons inside Buttons folder (including StealExploit)
		for _, btn in pairs(buttonsFolder:GetChildren()) do
			if btn:IsA("GuiButton") then
				local animBtn = AnimatedButton.new(btn)
				animBtn:Animate()
				animBtn.OnActivated:Connect(function()
					InterfaceController:Toggle(btn.Name)
				end)
			end
		end

		-- Functions for flying logic

		local function cleanupFlying()
			if conn then conn:Disconnect() conn = nil end
			if bp and bp.Parent then bp:Destroy() bp = nil end
			if humanoid then humanoid.PlatformStand = false end
		end

		local function flyTo(pos, stopDist, onArrive)
			cleanupFlying()
			if not humanoid or not hrp then return end
			humanoid.PlatformStand = true
			bp = Instance.new("BodyPosition")
			bp.MaxForce = Vector3.new(1e5, 1e5, 1e5)
			bp.P, bp.D = 3000, 500
			bp.Position = hrp.Position
			bp.Parent = hrp

			conn = RunService.Heartbeat:Connect(function(dt)
				local dir = pos - hrp.Position
				if dir.Magnitude < stopDist then
					cleanupFlying()
					if onArrive then onArrive() end
					return
				end
				bp.Position = hrp.Position + dir.Unit * math.min(moveSpeed * dt, dir.Magnitude)
			end)
		end

		local function getNearestEnemyPlot()
			local myPlot = PlotController:GetMyPlot()
			if not myPlot or not myPlot.PlotModel then return nil end

			local nearestPlot, nearestDist = nil, math.huge
			for _, plot in ipairs(Workspace.Plots:GetChildren()) do
				if plot:IsA("Model") and plot ~= myPlot.PlotModel then
					local spawn = plot:FindFirstChild("Spawn")
					if spawn then
						local dist = (hrp.Position - spawn.Position).Magnitude
						if dist < nearestDist then
							nearestDist = dist
							nearestPlot = plot
						end
					end
				end
			end
			return nearestPlot
		end

		local function startStealing()
			local myPlot = PlotController:GetMyPlot()
			if not myPlot or not myPlot.PlotModel then return end
			local deliveryHitbox = myPlot.PlotModel:FindFirstChild("DeliveryHitbox")
			if not deliveryHitbox then return end

			local enemyPlot = getNearestEnemyPlot()
			if enemyPlot then
				local spawn = enemyPlot:FindFirstChild("Spawn")
				if spawn then
					flyTo(spawn.Position, 6, function()
						flyTo(Vector3.new(deliveryHitbox.Position.X, deliveryHitbox.Position.Y + flyHeight, deliveryHitbox.Position.Z), 3)
					end)
				end
			end
		end

		local function updateToggleUI()
			local txtLabel = StealExploit:FindFirstChild("Txt")
			if txtLabel then
				txtLabel.TextColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
			end
		end

		local function checkAutoSteal()
			if enabled and player:GetAttribute("Stealing") then
				startStealing()
			else
				cleanupFlying()
			end
		end

		StealExploit.MouseButton1Click:Connect(function()
			enabled = not enabled
			updateToggleUI()

			if enabled then
				NotificationController.Success(nil, "Stealing Exploit is enabled!")
				checkAutoSteal()
			else
				NotificationController.Error(nil, "Stealing Exploit is disabled!")
				cleanupFlying()
			end
		end)

		StealExploit.MouseButton2Click:Connect(function()
			hudInterface:Toggle()
		end)

		player:GetAttributeChangedSignal("Stealing"):Connect(function()
			if enabled then
				if player:GetAttribute("Stealing") then
					startStealing()
				else
					cleanupFlying()
				end
			end
		end)

		player.CharacterAdded:Connect(function(character)
			char = character
			hrp = char:WaitForChild("HumanoidRootPart")
			humanoid = char:WaitForChild("Humanoid")
			cleanupFlying()
			updateToggleUI()

			if enabled and player:GetAttribute("Stealing") then
				startStealing()
			end

			if humanoid then
				humanoid.Died:Connect(function()
					cleanupFlying()
					NotificationController.Error(nil, "You died, process stopped.")
					enabled = false
					updateToggleUI()
				end)
			end
		end)

		if player.Character then
			char = player.Character
			hrp = char:WaitForChild("HumanoidRootPart")
			humanoid = char:WaitForChild("Humanoid")
		end

		updateToggleUI()
		wait (10)
		NotificationController.Error(nil, "Btw, the anti cheat has a 10% chance detecting it unless your lagging and makes you teleport back and back then make you reset.")
	end
})

Tab:CreateButton({
	Name = "Remove Distractions",
	Callback = function()
		local Bro = game.ReplicatedStorage.Controllers.ItemController
		Bro:Destroy()
		local Lighting = game:GetService("Lighting")
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local Workspace = game:GetService("Workspace")

		local CoreGui = game:GetService("CoreGui")
		local localPlayer = Players.LocalPlayer
		local PlayerScripts = localPlayer:WaitForChild("PlayerScripts")
		local Controls = require(PlayerScripts:WaitForChild("PlayerModule")):GetControls()
		local Packages = ReplicatedStorage:WaitForChild("Packages")
		local Net = require(Packages.Net)
		local BeeShootEvent = Net:RemoteEvent("BeeLauncher/Shoot")
		local CurrentCamera = Workspace.CurrentCamera

		local originalFOV = CurrentCamera.FieldOfView
		local originalAmbient = Lighting.Ambient
		local originalOutdoorAmbient = Lighting.OutdoorAmbient
		local originalMoveFunc = Controls.moveFunction

		-- Function to clean ParticleEmitters and Smoke from instance or character
		local function cleanParticlesAndSmoke(instance)
			for _, v in ipairs(instance:GetChildren()) do
				if v:IsA("ParticleEmitter") or v:IsA("Smoke") then
					v:Destroy()
				end
			end
		end

		local function cleanCharacter(char)
			if not char then return end
			for _, descendant in ipairs(char:GetDescendants()) do
				if descendant:IsA("ParticleEmitter") or descendant:IsA("Smoke") then
					descendant:Destroy()
				end
			end
		end

		local function cleanHead(char)
			if not char then return end
			local head = char:FindFirstChild("Head")
			if head then
				cleanParticlesAndSmoke(head)
			end
		end

		-- Apply to all players now
		for _, player in ipairs(Players:GetPlayers()) do
			if player.Character then
				cleanCharacter(player.Character)
				cleanHead(player.Character)
			end
			player.CharacterAdded:Connect(function(char)
				char:WaitForChild("Head", 5)
				cleanCharacter(char)
				cleanHead(char)
			end)
		end

		Players.PlayerAdded:Connect(function(player)
			player.CharacterAdded:Connect(function(char)
				char:WaitForChild("Head", 5)
				cleanCharacter(char)
				cleanHead(char)
			end)
		end)

		-- Ensure local player's head stays clean
		local function cleanLocalPlayerHead()
			local char = localPlayer.Character
			if char then
				cleanHead(char)
			end
		end

		cleanLocalPlayerHead()
		localPlayer.CharacterAdded:Connect(function()
			task.wait(1)
			cleanLocalPlayerHead()
		end)

		-- Disable annoying sounds
		local function disableSounds()
			local controllers = ReplicatedStorage:FindFirstChild("Controllers")
			if not controllers then return end
			local itemController = controllers:FindFirstChild("ItemController")
			if not itemController then return end

			local boogie = itemController:FindFirstChild("BoogieBombController")
			if boogie then
				local boomSound = boogie:FindFirstChild("BOOM")
				if boomSound and boomSound:IsA("Sound") then
					boomSound:Stop()
					boomSound:Destroy()
				end
			end

			local bee = itemController:FindFirstChild("BeeLauncherController")
			if bee then
				local buzzSound = bee:FindFirstChild("Buzzing")
				if buzzSound and buzzSound:IsA("Sound") then
					buzzSound:Stop()
					buzzSound:Destroy()
				end
			end
		end

		coroutine.wrap(function()
			while true do
				disableSounds()
				task.wait(5)
			end
		end)()

		-- Lock Lighting properties
		Lighting.ChildAdded:Connect(function(child)
			task.wait(0.00000000000000000025)
			if child.Parent == Lighting then
				child:Destroy()
			end
		end)

		local function enforceAmbient()
			if Lighting.Ambient ~= originalAmbient then
				Lighting.Ambient = originalAmbient
			end
			if Lighting.OutdoorAmbient ~= originalOutdoorAmbient then
				Lighting.OutdoorAmbient = originalOutdoorAmbient
			end
		end

		coroutine.wrap(function()
			while true do
				enforceAmbient()
				task.wait(1)
			end
		end)()

		local function enforceColorCorrections()
			for _, cc in ipairs(Lighting:GetChildren()) do
				if cc:IsA("ColorCorrectionEffect") and not cc.Enabled then
					cc.Enabled = true
				end
			end
		end
		Lighting.ChildAdded:Connect(enforceColorCorrections)
		enforceColorCorrections()

		-- Anti-FOV & Anti-Invert Movement Bee protection
		BeeShootEvent.OnClientEvent:Connect(function()
			CurrentCamera.FieldOfView = originalFOV
			Controls.moveFunction = originalMoveFunc

			-- Kill buzzing sound again
			local beeController = ReplicatedStorage.Controllers.ItemController:FindFirstChild("BeeLauncherController")
			if beeController then
				local buzzingSound = beeController:FindFirstChild("Buzzing")
				if buzzingSound and buzzingSound:IsA("Sound") then
					buzzingSound:Stop()
					buzzingSound:Destroy()
				end
			end

			-- Remove BeeBlur and ColorCorrection added by BeeLauncher
			for _, child in ipairs(Lighting:GetChildren()) do
				if (child:IsA("BlurEffect") and child.Name == "BeeBlur") or (child.Name == "ColorCorrection") then
					child:Destroy()
				end
			end

			-- NEW: Clean ParticleEmitter and Smoke inside LocalPlayer.Character.Head (after delay too)
			local char = localPlayer.Character
			if char then
				local head = char:FindFirstChild("Head")
				if head then
					-- Immediate cleanup
					for _, obj in ipairs(head:GetChildren()) do
						if obj:IsA("ParticleEmitter") or obj:IsA("Smoke") then
							obj:Destroy()
						end
					end

					-- Also clean any that spawn *after* bee fire for the next few seconds
					local connection
					connection = head.ChildAdded:Connect(function(obj)
						if obj:IsA("ParticleEmitter") or obj:IsA("Smoke") then
							task.wait(0.00000000000025)
							if obj and obj.Parent then
								obj:Destroy()
							end
						end
					end)

					-- Disconnect the ChildAdded listener after 5 seconds to save resources
					task.delay(5, function()
						if connection then
							connection:Disconnect()
						end
					end)
				end
			end
		end)

		coroutine.wrap(function()
			while true do
				if CurrentCamera.FieldOfView ~= originalFOV then
					CurrentCamera.FieldOfView = originalFOV
				end
				Controls.moveFunction = originalMoveFunc
				task.wait(1)
			end
		end)()

		Controls.moveFunction = originalMoveFunc


	end,
})


local Button = Tab:CreateButton({
	Name = "Dex Explorer | Client Stuff",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Anti Cheat Remover | Cybr",
	Callback = function()
		-- CYBR MADE THIS SHIT, PUT IN AUTO EXEC
		local cloneFlag = {}

		function p(o)
			o.Enabled = false
		end

		game.DescendantAdded:Connect(function(obj)
			if obj:IsA("ModuleScript") or obj:IsA("LocalScript") then
				if not cloneFlag[obj] then
					local a = obj:Clone()
					a.Name = `{obj.Name} - {obj:GetFullName()}`
					cloneFlag[a] = true
					if a.Name == "LocalScript   - ReplicatedFirst.LocalScript  " then
						task.spawn(p, obj)
					end
				end
			end
		end)
	end,
})


local Button = Tab:CreateButton({
	Name = "Brainrot ESP | Brainrot Gods & Secrets | Cybr",
	Callback = function()
		local animalData = require(game.ReplicatedStorage.Datas.Animals)
		local UserInputService = game:GetService("UserInputService")

		local db = false
		function esp()
			if db then
				for _, v in pairs(workspace:GetChildren()) do
					for i, d in pairs(animalData) do
						if v.Name == i then
							if d and (d.Rarity == "Brainrot God") then
								local highlight = Instance.new("Highlight", v)
								highlight.Enabled = true
							end
							if d and (d.Rarity == "Secret") then
								local highlight = Instance.new("Highlight", v)
								highlight.FillColor = Color3.fromRGB(38, 38, 38)
								highlight.Enabled = true
							end
						end
					end
				end
			else
				for _, v in pairs(workspace:GetChildren()) do
					for i, d in pairs(animalData) do
						if v.Name == i then
							if d and (d.Rarity == "Brainrot God" or d.Rarity == "Secret") then
								if v:FindFirstChildWhichIsA("Highlight") then
									print("hi")
									v:FindFirstChildWhichIsA("Highlight"):Destroy()
								end
							end
						end
					end
				end
			end
		end
		UserInputService.InputBegan:Connect(function(inp, proc)
			if not proc and inp.KeyCode == Enum.KeyCode.X then
				db = not db
				esp()
			end
		end)
		db = not db
		esp()
	end,
})

local Button = Tab:CreateButton({
	Name = "Find a server with a SECRET Brainrot!",
	Callback = function()
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local HttpService = game:GetService("HttpService")
		local TeleportService = game:GetService("TeleportService")
		local Workspace = game:GetService("Workspace")
		local StarterGui = game:GetService("StarterGui")

		local PlaceId = game.PlaceId
		local JobId = game.JobId
		local localPlayer = Players.LocalPlayer
		local animalData = require(ReplicatedStorage:WaitForChild("Datas"):WaitForChild("Animals"))

		local function notify(title, text)
			pcall(function()
				StarterGui:SetCore("SendNotification", {
					Title = title,
					Text = text,
					Duration = 4
				})
			end)
		end

		local function hasSecret()
			for _, v in ipairs(Workspace:GetChildren()) do
				local d = animalData[v.Name]
				if d and d.Rarity == "Secret" then
					return true
				end
			end
			return false
		end

		local function findServers()
			local servers = {}
			local cursor = ""
			for _ = 1, 5 do
				local url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true" .. (cursor ~= "" and "&cursor=" .. cursor or "")
				local success, response = pcall(function()
					return HttpService:JSONDecode(game:HttpGet(url))
				end)
				if success and response and response.data then
					for _, v in ipairs(response.data) do
						if v.id ~= JobId and tonumber(v.playing) < tonumber(v.maxPlayers) then
							table.insert(servers, v.id)
						end
					end
					if not response.nextPageCursor then break end
					cursor = response.nextPageCursor
				else
					break
				end
			end
			return servers
		end

		local function queueSelf()
			local queue = queue_on_teleport or (syn and syn.queue_on_teleport)
			if queue then
				queue("loadstring(game:HttpGet('https://raw.githubusercontent.com/luataun/Luckey-s-Hub/refs/heads/main/StealABrainrot/scriptvro'))()")
			end
		end

		local function hopToNextAvailableServer()
			local servers = findServers()
			if #servers == 0 then
				notify("Error", "No servers found. Retrying in 5s...")
				task.wait(5)
				return hopToNextAvailableServer()
			end

			for i = #servers, 2, -1 do
				local j = math.random(i)
				servers[i], servers[j] = servers[j], servers[i]
			end

			for _, serverId in ipairs(servers) do
				local worked, err = pcall(function()
					TeleportService:TeleportToPlaceInstance(PlaceId, serverId, localPlayer)
				end)
				if worked then
					return
				else
					warn("Teleport failed to server:", serverId, err)
					task.wait(1)
				end
			end

			notify("Teleport Failed", "All teleport attempts failed. Retrying...")
			task.wait(3)
			hopToNextAvailableServer()
		end

		local function runHopLoop()
			if hasSecret() then
				notify("✅ Secret Found!", "A secret pet is in this server!")

				local queue = queue_on_teleport or (syn and syn.queue_on_teleport)
				if queue then queue("") end -- clear any future auto-runs

				pcall(function()
					loadstring(game:HttpGet("https://raw.githubusercontent.com/luataun/Luckey-s-Hub/refs/heads/main/StealABrainrot/scriptvro"))()
				end)
			else
				notify("No Secret", "Searching other servers...")
				queueSelf()
				hopToNextAvailableServer()
			end
		end

		-- Start the auto hop loop
		task.delay(1.5, runHopLoop)
	end,
})



local Toggle = Tab:CreateToggle({
	Name = "Speed Boost",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		-- The function that takes place when the toggle is pressed
		-- The variable (Value) is a boolean on whether the toggle is true or false
		local player = game.Players.LocalPlayer
		local UIS = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")

		local speedBoost = false
		local boostMultiplier = 3.0
		local velocity
		local baseSpeed = 16
		local moveKeys = {}

		-- GUI Setup
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "SpeedBoostGUI"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = player:WaitForChild("PlayerGui")

		-- White button base
		local button = Instance.new("TextButton")
		button.Size = UDim2.new(0, 160, 0, 50)
		button.Position = UDim2.new(0.5, -80, 0.5, -25)
		button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		button.BackgroundTransparency = 0.35
		button.TextTransparency = 1 -- hide base button text
		button.AutoButtonColor = false
		button.BorderSizePixel = 0
		button.Parent = screenGui

		-- Rounded corners
		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 10)
		corner.Parent = button

		-- Overlay rainbow text label
		local rainbowText = Instance.new("TextLabel")
		rainbowText.Size = UDim2.new(1, 0, 1, 0)
		rainbowText.Position = UDim2.new(0, 0, 0, 0)
		rainbowText.BackgroundTransparency = 1
		rainbowText.Text = "Speed: OFF"
		rainbowText.TextScaled = true
		rainbowText.Font = Enum.Font.GothamBold
		rainbowText.TextColor3 = Color3.fromRGB(255, 255, 255)
		rainbowText.Parent = button

		-- Rainbow gradient for TEXT only
		local gradient = Instance.new("UIGradient")
		gradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
			ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),
			ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
			ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),
			ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
			ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
			ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0)),
		})
		gradient.Rotation = 0
		gradient.Parent = rainbowText

		-- Animate the gradient
		RunService.RenderStepped:Connect(function()
			gradient.Rotation = (gradient.Rotation + 1) % 360
		end)

		-- Draggable logic
		local dragging = false
		local dragStart, startPos

		button.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = button.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = input.Position - dragStart
				button.Position = UDim2.new(
					startPos.X.Scale,
					startPos.X.Offset + delta.X,
					startPos.Y.Scale,
					startPos.Y.Offset + delta.Y
				)
			end
		end)

		-- Toggle speed
		button.MouseButton1Click:Connect(function()
			speedBoost = not speedBoost
			rainbowText.Text = speedBoost and "Speed: ON" or "Speed: OFF"
		end)

		-- Track input
		UIS.InputBegan:Connect(function(input, gpe)
			if gpe then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				moveKeys[input.KeyCode] = true
			end
		end)

		UIS.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard then
				moveKeys[input.KeyCode] = false
			end
		end)

		-- Speed boost logic
		RunService:BindToRenderStep("SpeedBoostCheck", Enum.RenderPriority.Character.Value, function()
			if not player.Character or not player.Character.Parent then return end
			local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if not rootPart or not humanoid then return end

			if speedBoost then
				local state = humanoid:GetState()
				local onGround = (
					state == Enum.HumanoidStateType.Running
						or state == Enum.HumanoidStateType.RunningNoPhysics
						or state == Enum.HumanoidStateType.Landed
						or state == Enum.HumanoidStateType.RunningSlow
				)

				if onGround then
					if not velocity then
						velocity = Instance.new("BodyVelocity")
						velocity.MaxForce = Vector3.new(1e5, 0, 1e5)
						velocity.P = 1250
						velocity.Velocity = Vector3.zero
						velocity.Parent = rootPart
					end

					local camCF = workspace.CurrentCamera.CFrame
					local moveDir = Vector3.zero

					if moveKeys[Enum.KeyCode.W] then moveDir += Vector3.new(camCF.LookVector.X, 0, camCF.LookVector.Z) end
					if moveKeys[Enum.KeyCode.S] then moveDir -= Vector3.new(camCF.LookVector.X, 0, camCF.LookVector.Z) end
					if moveKeys[Enum.KeyCode.A] then moveDir -= camCF.RightVector end
					if moveKeys[Enum.KeyCode.D] then moveDir += camCF.RightVector end

					if moveDir.Magnitude > 0 then
						moveDir = moveDir.Unit * (baseSpeed * boostMultiplier)
					end

					velocity.Velocity = Vector3.new(moveDir.X, 0, moveDir.Z)
				else
					if velocity then
						velocity:Destroy()
						velocity = nil
					end
				end
			else
				if velocity then
					velocity:Destroy()
					velocity = nil
				end
			end
		end)
	end,
})


